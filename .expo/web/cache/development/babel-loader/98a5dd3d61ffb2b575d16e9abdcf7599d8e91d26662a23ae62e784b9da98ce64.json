{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dni = _useState4[0],\n    setDni = _useState4[1];\n  var validation = function validation() {};\n  var login = function login() {};\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"../assets/login/login-bg.jpg\"),\n      style: styles.backgroundImage\n    }), _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(Image, {\n        source: require(\"../assets/logoUNR.png\"),\n        style: styles.logo\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Ingresar al sistema\"\n      }), _jsxs(View, {\n        style: styles.form,\n        children: [_jsxs(View, {\n          children: [_jsx(Text, {\n            children: \"DNI\"\n          }), _jsx(TextInput, {\n            style: styles.textInput,\n            onChangeText: function onChangeText(text) {\n              return setDni(text);\n            },\n            keyboardType: \"email-address\"\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            children: \"Clave\"\n          }), _jsx(TextInput, {\n            style: styles.textInput,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            secureTextEntry: true\n          })]\n        }), _jsx(TouchableHighlight, {\n          style: styles.btn,\n          onPress: login,\n          children: _jsxs(View, {\n            style: styles.btn_container,\n            children: [_jsx(Image, {\n              source: require(\"../assets/login/signin.png\"),\n              style: styles.logo_btn\n            }), _jsx(Text, {\n              style: styles.btnText,\n              children: \"INGRESAR\"\n            })]\n          })\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  backgroundImage: {\n    resizeMode: \"cover\",\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\"\n  },\n  title: {\n    fontSize: 20.5,\n    fontFamily: \"RobotoBold\"\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    height: 470,\n    width: 332,\n    backgroundColor: \"white\",\n    borderTopColor: \"#006187\",\n    borderTopWidth: 5\n  },\n  form: {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: 20\n  },\n  logo: {\n    height: 63,\n    width: 63\n  },\n  btn: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#990070\",\n    width: 152,\n    height: 56,\n    color: \"white\"\n  },\n  btn_container: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: 5\n  },\n  logo_btn: {\n    height: 16,\n    width: 16\n  },\n  btnText: {\n    display: \"flex\",\n    color: \"white\",\n    fontFamily: \"Roboto\"\n  },\n  textInput: {\n    height: 36,\n    width: 240,\n    borderBottomColor: \"#ced4da\",\n    borderBottomWidth: 1\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","TouchableHighlight","Image","TextInput","jsx","_jsx","jsxs","_jsxs","Login","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","dni","setDni","validation","login","style","styles","container","children","source","require","backgroundImage","card","logo","title","form","textInput","onChangeText","text","keyboardType","secureTextEntry","btn","onPress","btn_container","logo_btn","btnText","create","height","display","alignItems","justifyContent","resizeMode","position","width","fontSize","fontFamily","flexDirection","backgroundColor","borderTopColor","borderTopWidth","gap","color","borderBottomColor","borderBottomWidth"],"sources":["/home/bruno/Documents/GitHub/appQ/src/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableHighlight,\n  Image,\n  TextInput,\n} from \"react-native\";\n\nconst Login = () => {\n  const [password, setPassword] = useState(\"\");\n  const [dni, setDni] = useState(\"\");\n\n  const validation = () => {};\n\n  const login = () => {};\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require(\"../assets/login/login-bg.jpg\")}\n        style={styles.backgroundImage}\n      ></Image>\n      <View style={styles.card}>\n        <Image\n          source={require(\"../assets/logoUNR.png\")}\n          style={styles.logo}\n        ></Image>\n        <Text style={styles.title}>Ingresar al sistema</Text>\n        <View style={styles.form}>\n          <View>\n            <Text>DNI</Text>\n            <TextInput\n              style={styles.textInput}\n              onChangeText={(text) => setDni(text)}\n              keyboardType=\"email-address\"\n            />\n          </View>\n          <View>\n            <Text>Clave</Text>\n            <TextInput\n              style={styles.textInput}\n              onChangeText={(text) => setPassword(text)}\n              secureTextEntry\n            />\n          </View>\n          <TouchableHighlight style={styles.btn} onPress={login}>\n            <View style={styles.btn_container}>\n              <Image\n                source={require(\"../assets/login/signin.png\")}\n                style={styles.logo_btn}\n              />\n              <Text style={styles.btnText}>INGRESAR</Text>\n            </View>\n          </TouchableHighlight>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  backgroundImage: {\n    resizeMode: \"cover\",\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n  },\n  title: {\n    fontSize: 20.5,\n    fontFamily: \"RobotoBold\",\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    height: 470,\n    width: 332,\n    backgroundColor: \"white\",\n    borderTopColor: \"#006187\",\n    borderTopWidth: 5,\n  },\n  form: {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: 20,\n  },\n  logo: {\n    height: 63,\n    width: 63,\n  },\n  btn: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#990070\",\n    width: 152,\n    height: 56,\n    color: \"white\",\n  },\n  btn_container: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: 5,\n  },\n  logo_btn: {\n    height: 16,\n    width: 16,\n  },\n  btnText: {\n    display: \"flex\",\n    color: \"white\",\n    fontFamily: \"Roboto\",\n  },\n  textInput: {\n    height: 36,\n    width: 240,\n    borderBottomColor: \"#ced4da\",\n    borderBottomWidth: 1,\n  },\n});\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}