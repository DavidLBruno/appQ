{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Login from \"./Login\";\nimport { useFonts } from \"expo-font\";\nimport { useCallback, useEffect } from \"react\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar MainStack = function MainStack() {\n  var _useFonts = useFonts({\n      Roboto: require(\"../assets/fonts/Roboto/Roboto-Light.ttf\"),\n      RobotoBold: require(\"../assets/fonts/Roboto/Roboto-Bold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  useEffect(function () {\n    function prepare() {\n      return _prepare.apply(this, arguments);\n    }\n    function _prepare() {\n      _prepare = _asyncToGenerator(function* () {\n        yield SplashScreen.preventAutoHideAsync();\n      });\n      return _prepare.apply(this, arguments);\n    }\n    prepare();\n  }, []);\n  var onLayout = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) return null;\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login\n      })\n    })\n  });\n};\nexport default MainStack;","map":{"version":3,"names":["Login","useFonts","useCallback","useEffect","SplashScreen","NavigationContainer","createNativeStackNavigator","jsx","_jsx","Stack","MainStack","_useFonts","Roboto","require","RobotoBold","_useFonts2","_slicedToArray","fontsLoaded","prepare","_prepare","apply","arguments","_asyncToGenerator","preventAutoHideAsync","onLayout","hideAsync","children","Navigator","screenOptions","headerShown","Screen","name","component"],"sources":["/home/bruno/Documents/GitHub/appQ/src/MainStack.jsx"],"sourcesContent":["import Login from \"./Login\";\nimport { useFonts } from \"expo-font\";\nimport { useCallback, useEffect } from \"react\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nconst Stack = createNativeStackNavigator();\n\nconst MainStack = () => {\n  const [fontsLoaded] = useFonts({\n    Roboto: require(\"../assets/fonts/Roboto/Roboto-Light.ttf\"),\n    RobotoBold: require(\"../assets/fonts/Roboto/Roboto-Bold.ttf\"),\n  });\n\n  useEffect(() => {\n    async function prepare() {\n      await SplashScreen.preventAutoHideAsync();\n    }\n    prepare();\n  }, []);\n\n  const onLayout = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) return null;\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}\n      >\n        <Stack.Screen name=\"Login\" component={Login} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default MainStack;\n"],"mappings":";;AAAA,OAAOA,KAAK;AACZ,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC9C,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE5E,IAAMC,KAAK,GAAGH,0BAA0B,CAAC,CAAC;AAE1C,IAAMI,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB,IAAAC,SAAA,GAAsBV,QAAQ,CAAC;MAC7BW,MAAM,EAAEC,OAAO,0CAA0C,CAAC;MAC1DC,UAAU,EAAED,OAAO,yCAAyC;IAC9D,CAAC,CAAC;IAAAE,UAAA,GAAAC,cAAA,CAAAL,SAAA;IAHKM,WAAW,GAAAF,UAAA;EAKlBZ,SAAS,CAAC,YAAM;IAAA,SACCe,OAAOA,CAAA;MAAA,OAAAC,QAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAF,SAAA;MAAAA,QAAA,GAAAG,iBAAA,CAAtB,aAAyB;QACvB,MAAMlB,YAAY,CAACmB,oBAAoB,CAAC,CAAC;MAC3C,CAAC;MAAA,OAAAJ,QAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IACDH,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMM,QAAQ,GAAGtB,WAAW,CAAAoB,iBAAA,CAAC,aAAY;IACvC,IAAIL,WAAW,EAAE;MACf,MAAMb,YAAY,CAACqB,SAAS,CAAC,CAAC;IAChC;EACF,CAAC,GAAE,CAACR,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACA,WAAW,EAAE,OAAO,IAAI;EAE7B,OACET,IAAA,CAACH,mBAAmB;IAAAqB,QAAA,EAClBlB,IAAA,CAACC,KAAK,CAACkB,SAAS;MACdC,aAAa,EAAE;QACbC,WAAW,EAAE;MACf,CAAE;MAAAH,QAAA,EAEFlB,IAAA,CAACC,KAAK,CAACqB,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEhC;MAAM,CAAE;IAAC,CAChC;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAeU,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}